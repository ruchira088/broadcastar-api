alias:
  - &install-sbt
    name: Install sbt
    command: |
      apt-get update &&
      apt-get install apt-transport-https bc ca-certificates software-properties-common -y

      echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 &&
      apt-get update &&
      apt-get install sbt -y
  - &restore-sbt-cache
    keys:
      - sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
      - sbt-cache

version: 2

jobs:
  compile_and_test:
    docker:
      - image: openjdk:8-jdk
    steps:
      - run: *install-sbt
      - checkout
      - restore_cache: *restore-sbt-cache
      - run:
          name: Fetch dependencies
          command: sbt update
      - run:
          name: Compile
          command: sbt compile
      - run:
          name: Run unit tests
          command: sbt test
      - save_cache:
          key: sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
          paths:
            - ~/.sbt
            - ~/.ivy2

  push_docker_image:
    docker:
      - image: openjdk:8-jdk
    steps:
      - run: *install-sbt
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Install Docker client
          command: |
            apt update && apt install curl -y

            curl -L -o /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz && \
            tar -xv -C /tmp -f /tmp/docker.tgz && \
            mv /tmp/docker/* /usr/local/bin
      - run:
          name: Install Terraform
          command: |
            apt update && apt install unzip curl -y

            curl -L -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.11.14/terraform_0.11.14_linux_amd64.zip && \
            unzip -d /tmp /tmp/terraform.zip && \
            chmod +x /tmp/terraform && \
            mv /tmp/terraform /usr/local/bin
      - run:
          name: Install AWS CLI
          command: |
            apt install python-pip python-dev build-essential -y

            pip install awscli --upgrade --user && \
            ln -sf $HOME/.local/bin/aws /usr/local/bin
      - run:
          name: Install jq
          command: apt update && apt install jq -y
      - checkout
      - restore_cache: *restore-sbt-cache
      - run:
          name: Create Terraform resources
          command: |
            terraform init deploy/terraform/
            terraform apply -auto-approve deploy/terraform/
      - run:
          name: Login to ECR
          command: aws ecr get-login --no-include-email --region ap-southeast-2 | bash
      - run:
          name: Build application binary
          command: sbt dist
      - run:
          name: Build production Docker image
          command: docker build -t chirper-api -f Dockerfile-prod .
      - run:
          name: Tag Docker image
          command: |
            ecr=`cd deploy/terraform && terraform init && terraform output -json | jq .chirper_api_ecr.value | tr -d '"' && cd ../..`
            git_tag=`git rev-parse HEAD | cut -c 1-8`
            git_branch=`git rev-parse --abbrev-ref HEAD | tr [:upper:] [:lower:] | tr ' ' '-'`
            build_timestamp=`date +%F-%T | tr ':' '-'`

            tags=($git_tag $git_branch-$CIRCLE_BUILD_NUM $build_timestamp-$git_branch)

            for tag in "${tags[@]}"
            do
              docker tag chirper-api $ecr:$tag
              docker push $ecr:$tag
            done

workflows:
  version: 2
  deploy:
    jobs:
      - compile_and_test
      - push_docker_image:
          requires:
            - compile_and_test
